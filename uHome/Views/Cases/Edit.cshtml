@model uHome.Models.EditCaseViewModel

@{
    ViewBag.Title = "Edit";
}
<h4>@Model.Title</h4>

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <hr />
            <dl>
                <dt>Description</dt>
                <dd class="well well-lg">@Model.Description</dd>
                <dt>Attachments</dt>
                <dd>
                    <div class="container" id="attachments">
                        <div class="row">
                            <div class="col-md-5">Name</div>
                            <div class="col-md-4">Upload At</div>
                            <div class="col-md-2">Size</div>
                            <div class="col-md-1"></div>
                        </div>
                        @foreach (var attachment in Model.Attachments)
                        {
                            <div class="row" id="attachment_@attachment.ID">
                                <div class="col-md-5">@Html.ActionLink(attachment.Name, "Download", "Attachments", new { id = attachment.ID }, null)</div>
                                <div class="col-md-4">@attachment.UploadAt</div>
                                <div class="col-md-2">@attachment.Size</div>
                                <div class="col-md-1">
                                    @Ajax.RawActionLink(
                                    "<span class=\"glyphicon glyphicon-trash\"></span>",
                                    "Delete",
                                    "Attachments",
                                    new { id = attachment.ID },
                                    new AjaxOptions
                                    {
                                        Confirm = string.Format("Are you sure you want ot delete {0}?", attachment.Name),
                                        OnBegin = "showSpinner",
                                        OnComplete = "hideSpinner",
                                        OnSuccess = "onAttachmentDeleteSuccess",
                                        OnFailure = "onAttachmentDeleteFailure",
                                        HttpMethod = "DELETE"
                                    }, null)
                                </div>
                            </div>
                        }
                    </div>
                </dd>
            </dl>
        </div>
        <div class="col-md-4">
            <hr />
            <div class="dl-horizontal">
                <div>@Html.LabelFor(model => model.CreatedBy)</div>
                <div>@Html.DisplayFor(model => model.CreatedBy)</div>
                <div>@Html.LabelFor(model => model.CreatedAt)</div>
                <div>@Html.DisplayFor(model => model.CreatedAt)</div>
                <div>@Html.LabelFor(model => model.UpdatedAt)</div>
                <div id="UpdatedAt">@Html.DisplayFor(model => model.UpdatedAt)</div>
                <div>@Html.LabelFor(model => model.State)</div>
                <div>@Html.DisplayFor(model => model.State)</div>
                <div>@Html.LabelFor(model => model.Assignee)</div>
                <div>@Html.DisplayFor(model => model.Assignee)</div>
                <div id="plupload_container">
                    <a id="pickfiles" href="javascript:;" class="btn btn-primary">Select Files</a>
                    <a id="savefiles" href="javascript:;" class="btn btn-info" onclick="window.location.reload();">@Resources.UploadAttachments</a>
                    <span id="filelist"></span>
                </div>
                <div id="console"></div>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/plupload")

    <script type="text/javascript">

        var uploader = new plupload.Uploader({
            runtimes: 'html5, html4',
            browse_button: 'pickfiles',
            container: document.getElementById('plupload_container'),
            url: "@Url.Action("AddFiles", "Cases", new { id = Model.ID })",

            filters: {
                max_file_size: '10mb',
            },

            init: {
                PostInit: function () {
                    document.getElementById('filelist').innerHTML = '';
                },

                UploadProgress: function (up, file) {
                    document.getElementById(file.id).getElementsByTagName('b')[0].innerHTML = '<span>' + file.percent + "%</span>";
                },

                Error: function (up, err) {
                    document.getElementById('console').innerHTML += "\nError #" + err.code + ": " + err.message;
                }
            }
        });

        uploader.init();

        uploader.bind("FilesAdded", function (up, files) {
            plupload.each(files, function (file) {
                document.getElementById('filelist').innerHTML += '<div id="' + file.id + '">' + file.name + ' (' + plupload.formatSize(file.size) + ') <b></b></div>';
            });

            up.refresh();
            up.start();
        });

        function onAttachmentDeleteSuccess(response)
        {
            if (response.success)
            {
                var id = "#attachment_" + response.id;
                $(id).remove();
                $('#UpdatedAt').text(response.updatedAt);
            }
            else {
                alert(response.error);
            }
        }

    </script>
}
